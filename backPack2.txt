public class Solution {
    /**
     * @param m: An integer m denotes the size of a backpack
     * @param A & V: Given n items with size A[i] and value V[i]
     * @return: The maximum value
     */
    public int backPackII(int m, int[] A, int V[]) {
        // write your code here
        int n = A.length;
        int[][] value = new int[n+1][m+1];
        for(int i = 0;i != n+1; i++){
            for(int j = 0; j != m+1; j++){
                value[i][j] = 0;
            }
        }
        int[] A1 = new int[n+1];
        int[] V1 = new int[n+1];
        for(int i = 1; i < n+1; i++){
            A1[i] = A[i-1];
            V1[i] = V[i-1];
        }
        for(int i = 1;i < n+1; ++i){
            for(int j = 0;j < m+1; ++j){
                if(j < A1[i]){
                    value[i][j] = value[i-1][j];
                }
                else
                    value[i][j] = Math.max(value[i-1][j],value[i-1][j-A1[i]]+V1[i]);
            }
        }
        return value[n][m];
    }
}
