/**
 * Definition of ListNode
 * class ListNode {
 * public:
 *     int val;
 *     ListNode *next;
 *     ListNode(int val) {
 *         this->val = val;
 *         this->next = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param head: The first node of linked list.
     * @param n: An integer.
     * @return: Nth to last node of a singly linked list. 
     */
    // ListNode *reverseList(ListNode *head);
    ListNode *nthToLast(ListNode *head, int n) {
        // write your code here
        // ListNode *reverseList(ListNode *head);
        if(head == NULL || head->next == NULL)  return head;
        int x = 0;
        ListNode *ptr = reverseList(head);
        while(ptr){
            x++;
            if(x == n){
                break;  
            } 
            ptr = ptr->next;
        }
        return ptr;
    }   
    ListNode *reverseList(ListNode *head){
        if(head == NULL || head->next == NULL)  return head;
        ListNode* newhead = reverseList(head->next);
        head->next->next = head;;
        head->next = NULL;
        return newhead;
    }
};



