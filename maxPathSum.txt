/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: An integer.
     */
    public static Integer max_sum ;
    public int maxPathSum(TreeNode root) {
        // write your code here
        max_sum = Integer.MIN_VALUE;
        dfs(root);
        return max_sum;
    }
    private int dfs(TreeNode root){
        if(root == null)  return 0;
        int maxleft = dfs(root.left);
        int maxright = dfs(root.right);
        int sum = root.val; 
        if(maxleft > 0)  sum += maxleft;
        if(maxright > 0)  sum += maxright;
        max_sum = Math.max(sum,max_sum);
        return Math.max(maxleft,maxright) > 0 ? Math.max(maxleft,maxright) + root.val : root.val;
    }
}