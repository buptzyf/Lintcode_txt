public class Solution {
    /**
     * @param candidates: A list of integers
     * @param target:An integer
     * @return: A list of lists of integers
     */
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        // write your code here
        Arrays.sort(candidates);
        ArrayList<List<Integer>> res = new ArrayList<List<Integer>>();
        ArrayList<Integer> list = new ArrayList<Integer>();
        if(candidates == null || candidates.length == 0)  return res;
        bomb(res, list, candidates, target, 0, 0);
        return res;
    }
    static void bomb(ArrayList<List<Integer>>res, ArrayList<Integer>list, int[] nums, int target, 
                    int sum, int pos ){
        if(sum == target){
            res.add(new ArrayList<Integer>(list));
            return ;
        }
        if(sum > target)  return ;
        for(int i = pos; i < nums.length; i++){
            sum += nums[i];
            list.add(nums[i]);
            bomb(res, list, nums, target, sum , i);
            sum -= nums[i];
            list.remove(list.size()-1);
        }
    }
}
