class Solution {
    /** 
     * param A : an integer ratated sorted array and duplicates are allowed
     * param target :  an integer to be search
     * return : a boolean 
     */
public:
    bool search(vector<int> &A, int target) {
        // write your code here
        if(A.empty())  return false;
        int n = A.size();
        if(n == 0)  return false;
        int left = 0; 
        int right = n - 1;
        while(left + 1 < right){
            int mid = left + (right - left)/2;
            if(A[left] < A[mid]){
                if(target >= A [left] && target < A[mid]){
                    right = mid;
                }
                else{
                    left = mid;
                }
                
            }
            else if(A [mid] < A[left]){
                if(target <= A[right] && target > A[mid]){
                    left = mid;
                }
                else{
                    right = mid;
                }
            }
            else{
                left++;
            }
            if(target == A[mid] || target == A[left]||target == A[right])   return true;
        }
        return false;
    }
};