public class Solution {
    /**
     * @param nums: The integer array
     * @return: The length of LIS (longest increasing subsequence)
     */
    public int longestIncreasingSubsequence(int[] nums) {
        // write your code here
        if(nums == null || nums.length == 0)  return 0;
        int[] len = new int[nums.length];
        // for(int i:len){
        //     i = 1;
        // } // 这种方法为何不可以？
        // for(int i = 0; i < nums.length; i++){
        //     len[i] = 1;
        // }
        Arrays.fill(len,1);
        for(int i = 1; i < nums.length; i++){
            for(int j = 0; j < i; j++){
                if(nums[j] <= nums[i] && len[i] <(len[j] + 1)){
                    len[i] = len[j]+1;
                }
            }   
        }
        int max = 0;
        for(int num:len){
            max = Math.max(num,max);
        }
        return max;
    }
}

