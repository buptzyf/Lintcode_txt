class Solution {
    /**
     * @param nums: A list of integers.
     * @return: A list of permutations.
     */
    public ArrayList<ArrayList<Integer>> permute(ArrayList<Integer> nums) {
        // write your code here
       ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
       ArrayList<Integer> list = new ArrayList<Integer>();
       //Òì³£´¦Àí
       if(nums == null || nums.size() == 0)  return res;
       per(nums,list, res);
       return res;
    }
    public void per(ArrayList<Integer> nums,ArrayList<Integer> list,ArrayList<ArrayList<Integer>> ret){
       if(list.size() == nums.size()){
           ret.add(new ArrayList<Integer>(list));
           return;
       }
       for(int i = 0; i < nums.size(); i++){
           if(list.contains(nums.get(i)))  continue;
           list.add(nums.get(i));
           per(nums,list,ret);
           list.remove(list.size()-1);
       }
    }
}













