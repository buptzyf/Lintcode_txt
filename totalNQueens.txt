class Solution {
    /**
     * Calculate the total number of distinct N-Queen solutions.
     * @param n: The number of queens.
     * @return: The total number of distinct solutions.
     */
    public static int sum;
    public int totalNQueens(int n) {
        //write your code here
        sum = 0;
        int[] usedcolums = new int[n];
        counter(usedcolums,0);
        return sum;
    }
    public void counter(int[] usedcolums, int row){
        int n = usedcolums.length;
        if(row == n){
            sum++;
            return;
        }
        for(int j = 0; j < n; j++){
            usedcolums[row] = j;
            if(invalid(usedcolums,row)){
                counter(usedcolums,row+1);
            }
        }
    }
    public boolean invalid(int[]usedcolums,int row){
        for(int i = 0; i < row; i++){
            if(usedcolums[row] == usedcolums[i]){
                return false;
            }
            if(row - i == Math.abs(usedcolums[row] - usedcolums[i])){   //新皇后与旧皇后的测试，
            //新皇后是【row，usedcolums[row]】旧皇后是【i，usedcolums[i]】
                return false;
            }
        }
        return true;
    }
};


